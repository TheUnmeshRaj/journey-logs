#include <stdio.h>
#include <stdlib.h>

int partition(int arr[], int l, int r) {
    int pivot = arr[r];
    int i = l-1;

    for (int j = l; j <= r - 1; j++) {
        if (arr[j] < pivot) {
            i++;
            int temp = arr[i];
            arr[i]=arr[j];
            arr[j]=temp;
        }
    }
    int temp = arr[i+1];
    arr[i+1]=arr[r];
    arr[r]=temp;
    return (i + 1);
}

void quickSort(int arr[], int l, int r) {
    if (l < r) {
        int pi = partition(arr, l, r);
        quickSort(arr, l, pi - 1);
        quickSort(arr, pi + 1, r);
    }
}

int uniqueness(int arr[],int s) {
    for (int i = 0; i < s - 1; i++) {
        if (arr[i] == arr[i + 1])
            return 1;
    }
    return 0;
}

int main() {
int s;
    printf("Enter size of array:");
    scanf("%d", &s);
    int arr[s];
    printf("Enter elements:\n");
    for (int i = 0; i < s; i++) {
        scanf("%d", &arr[i]);
    }
    quickSort(arr, 0, s - 1);
    if (uniqueness(arr,s))
        printf("\nNot unique\n");
    else
        printf("\nUnique\n");
    return 0;
}
